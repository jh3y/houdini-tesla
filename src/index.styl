/* Bit of a hack but animate height by 0.1px to trigger repaint */
@keyframes coil {
  50% {
    height: var(--h);
  }
}

.tesla:active {
  --spread: 4;
  animation: coil .1s infinite linear;
}

@supports (background: paint(something)) {
  // This is where we use the custom properties
  @property --tesla-trip {
    syntax: '<integer>';
    inherits: true;
    initial-value: 0;
  }
  .tesla {
    --tesla: var(--tesla-trip); /* Animated noise with property, hack to animate? */
    --tesla-variance: 100;
  }
  @keyframes c {
    0%, 100% {
      --tesla-trip: 0;
    }
    50% {
      --tesla-trip: var(--tesla-variance);
    }
  }
  .tesla:active {
    animation: c .5s infinite linear;
  }
}

// Additional Styling

body {
  font-family: sans-serif;
  height: 100vh;
  width: 100vw;
  min-height: 100vh;
  padding: 0;
  position: relative;
  margin: 0;
  background-color: hsl(0, 0%, 5%);
}

.tesla {
  --tesla-hue: 180;
  --tesla-saturation: 100;
  --tesla-lightness: 50;
  --tesla-blur: 10;
  --tesla-width: 10;
  --tesla-angle: 45;
  --tesla-segments: 8;
  --lightness: 50;
  --spread: 10;
  --color: 'hsl(%s, %s, %s)' % (var(--tesla-hue) calc(var(--tesla-saturation) * 1%) calc(var(--tesla-lightness) * 1%))
  border: 0;
  font-size: 2rem;
  padding: 1rem 2rem;
  border-radius: 10px;
  font-weight: bold;
  font-family: sans-serif;
  cursor: pointer;
  color: hsl(0, 0%, 100%);
  outline: transparent;
  box-shadow: '0 0px %s 0 %s;' % (calc(var(--spread) * 1px) var(--color))
  transition: box-shadow 0.1s, transform 0.1s;
  background: paint(tesla-coil);
  background-color: black;
}

.tesla:hover {
  --spread: 20;
  --lightness: 80;
}

.container {
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
}